"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useIsDrawerOpen;

var React = _interopRequireWildcard(require("react"));

var _native = require("@react-navigation/native");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Hook to detect if the drawer is open in a parent navigator.
 */
function useIsDrawerOpen() {
  const navigation = (0, _native.useNavigation)();
  let drawer = navigation; // The screen might be inside another navigator such as stack nested in drawer
  // We need to find the closest drawer navigator and add the listener there

  while (drawer && drawer.dangerouslyGetState().type !== 'drawer') {
    drawer = drawer.dangerouslyGetParent();
  }

  const [isDrawerOpen, setIsDrawerOpen] = React.useState(() => drawer ? Boolean(drawer.dangerouslyGetState().history.find(it => it.type === 'drawer')) : false);
  React.useEffect(() => {
    const unsubscribe = drawer.addListener('state', e => {
      setIsDrawerOpen(Boolean(e.data.state.history.find(it => it.type === 'drawer')));
    });
    return unsubscribe;
  }, [drawer, isDrawerOpen]);
  return isDrawerOpen;
}
//# sourceMappingURL=useIsDrawerOpen.js.map